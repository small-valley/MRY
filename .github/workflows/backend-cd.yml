name: CD-backend

on:
  push:
    branches:
      - development
    paths:
      - 'backend/**'
      - 'shared/**'
      - 'aws-cdk/backend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: AWS
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      POSTGRE_DATABASE_HOST: ${{ secrets.POSTGRE_DATABASE_HOST }}
      POSTGRE_DATABASE_PORT: ${{ secrets.POSTGRE_DATABASE_PORT }}
      POSTGRE_DATABASE_USER_NAME: ${{ secrets.POSTGRE_DATABASE_USER_NAME }}
      POSTGRE_DATABASE_PASSWORD: ${{ secrets.POSTGRE_DATABASE_PASSWORD }}
      POSTGRE_DATABASE_NAME: ${{ secrets.POSTGRE_DATABASE_NAME }}
      BASTION_HOST: ${{ secrets.BASTION_HOST }}
      BASTION_USER: ${{ secrets.BASTION_USER }}
      BASTION_SSH_KEY: ${{ secrets.BASTION_SSH_KEY }}
      FRONT_AUTH_REDIRECT_URL: ${{ secrets.FRONT_AUTH_REDIRECT_URL }}
      GOOGLE_OAUTH_CALLBACK_URL: ${{ secrets.GOOGLE_OAUTH_CALLBACK_URL }}
      GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
      GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd aws-cdk && npm ci
          cd backend/layer/a && npm ci
          cd ../b && npm ci
          cd ../../../../backend && npm ci

      - name: Build Nest.js app
        run: |
          cd backend && npm run build

      # - name: Migration
      #   run: |
      #     mkdir ~/.ssh
      #     ssh-keyscan -H $BASTION_HOST >> ~/.ssh/known_hosts
      #     eval `ssh-agent -s`
      #     ssh-add - <<< "$BASTION_SSH_KEY"
      #     ssh -fN -v -L $POSTGRE_DATABASE_PORT:$POSTGRES_DATABASE_HOST:$POSTGRE_DATABASE_PORT $BASTION_USER@$BASTION_HOST
      #     cd backend && npm run db:migration

      - name: Deploy with CDK
        run: |
          npm install -g aws-cdk
          cd aws-cdk && npm run deploy:backend

      - name: Clean up
        run: |
          npm prune --production
